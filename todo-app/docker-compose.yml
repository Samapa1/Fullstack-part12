services:
  app:
    image: todo-front-prod
    build:
      context: ./todo-frontend/. # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    # volumes:
    #   - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    # ports:
    #   - 5173:5173
    container_name: todo-front-prod # This will name the container 
  server1:
    image: todo-back-prod
    build:
      context: ./todo-backend/. 
      dockerfile: Dockerfile 
    # volumes:
    #     - ./todo-backend/:/usr/src/app 
    # ports:
    #   - 3000:3000
    container_name: todo-back-prod 
    environment: 
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database

    volumes: 
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo_data:/data/db

  redis:
    image: redis
    command: ['redis-server', '--appendonly', 'yes']
    ports:
      - 6379:6379
    volumes:
    - ./redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started